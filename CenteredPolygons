import turtle
import math
wn = turtle.Screen()
al = turtle.Turtle()
al.color("black")
turtle.tracer(0,0)
#al.speed(7)

'''
    num_sides = input("How many sides?")
    num_length = input("How long should the sides be?")
    num_shapes = input("How many shapes to repeat?")
    num_offset = input("What should the offset be?")

    int (num_sides,num_length,num_shapes,num_offset)
'''
num_sides = 7
num_length = 0
num_shapes = 80
num_offset =4

#al.color("green")
#al.stamp()
#al.color("black")
    
def radius(num_sides,num_length):
    return(num_length/(2*math.sin(math.radians(180/num_sides))))

def drawPolygon (num_sides,num_length):
    ang = (num_sides-2)*180/num_sides
    for i in range(num_sides):
        al.forward(num_length)
        al.left(180-ang)   
    

def drawShape (num_sides,num_length,num_shapes,num_offset):
    ang = (num_sides-2)*180/num_sides
    al.right(180-ang/2)
    al.up()
    big_side_len=num_length+num_shapes*num_offset
    poly_rad=radius(num_sides,big_side_len)
    al.forward(poly_rad)
    al.left(180-ang/2)
    al.down()
    counter=1
    for i in range(num_shapes):
        if counter%2:
            al.fillcolor("black")
        else:
            al.fillcolor("white")
        al.begin_fill()
        drawPolygon(num_sides,big_side_len)
        al.end_fill()
        al.up()
        al.left(ang/2-180)
        al.back(poly_rad)
        big_side_len -= num_offset
        poly_rad=radius(num_sides,big_side_len)
        al.forward(poly_rad)
        al.down()
        al.left(180-ang/2)
        counter +=1
    
    

drawShape(num_sides,num_length,num_shapes,num_offset)


turtle.update()
